{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","newFilter","handleFilterChange","value","onChange","Person","person","name","Number","number","Persons","persons","deletePersonFromList","filter","toUpperCase","includes","map","onClick","PersonForm","props","onSubmit","addPerson","newName","handlePersonChange","newNumber","handleNumberChange","type","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","useEffect","personService","initialPersons","createPersonObject","date","Date","toISOString","addedMessage","setTimeout","event","target","preventDefault","some","window","confirm","personObject","personForReplace","find","p","returnedPerson","changedPerson","concat","catch","error","console","log","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b006451.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Filter = ({newFilter, handleFilterChange}) => {\r\n    return (\r\n    <div>\r\n        filter shown with: <input\r\n            value={newFilter}\r\n            onChange={handleFilterChange}\r\n        />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Person = ({ person }) => person.name\r\n\r\nconst Number = ({ person }) => ` ${person.number}`\r\n\r\n\r\nconst Persons = ({persons, newFilter, deletePersonFromList }) => {\r\n    const personsToShow = persons.filter(person => person.name.toUpperCase().includes(newFilter.toUpperCase()))\r\n\r\n   /*  const deletePersonFromList = (person) => {\r\n        let confirmation = window.confirm(`Delete ${person.name} ?`)\r\n        if (confirmation) {\r\n            deletePerson(person.id)\r\n        }\r\n    } */\r\n\r\n    return (\r\n\r\n        personsToShow.map(person => {\r\n            return (\r\n                <div key={person.name + person.number}>\r\n                    <Person key={person.name} person={person} />\r\n                    <Number key={person.number} person={person} />&nbsp; \r\n                        <button onClick={() => deletePersonFromList(person)} >delete</button>\r\n                    \r\n\r\n                </div >\r\n            )\r\n        }\r\n        )\r\n    )\r\n\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.addPerson}>\r\n                <div>\r\n                    name: <input\r\n                        value={props.newName}\r\n                        onChange={props.handlePersonChange}\r\n                    />\r\n                    <div>number: <input\r\n                        value={props.newNumber}\r\n                        onChange={props.handleNumberChange} /></div>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst replacePerson = (newObject, id) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    deletePerson,\r\n    replacePerson\r\n}","import React from 'react'\r\nimport PersonForm from './PersonForm'\r\n\r\nconst Notification = ({ message }) => {\r\n    const addedStyle = {\r\n        color: \"green\",\r\n        background: \"lightgrey\",\r\n        fontSize: \"20px\",\r\n        borderStyle: \"solid\",\r\n        borderRadius: \"5px\",\r\n        padding: \"10px\",\r\n        marginBottom: \"10px\"\r\n    }\r\n    const deletedStyle = {\r\n        color: \"red\",\r\n        background: \"lightgrey\",\r\n        fontSize: \"20px\",\r\n        borderStyle: \"solid\",\r\n        borderRadius: \"5px\",\r\n        padding: \"10px\",\r\n        marginBottom: \"10px\"\r\n    }\r\n\r\n    if (message === null) {\r\n        return null\r\n    } else if (message.includes(\"Added\")) {\r\n        return (\r\n            <div style={addedStyle}>\r\n                {message}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div style={deletedStyle}>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Filter from './components/Filter';\nimport Persons from './components/Persons';\nimport PersonForm from './components/PersonForm';\nimport personService from './services/persons'\nimport Notification from './components/Notification';\nimport './index.css'\n\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n\n\n\n\n\n  const createPersonObject = () => {\n    const personObj = {\n      name: newName,\n      number: newNumber,\n      date: new Date().toISOString(),\n    }\n\n    return personObj\n\n  }\n\n  const addedMessage = (name) => {\n    setMessage(`Added ${name}`)\n    setTimeout(() => {\n      setMessage(null)\n    }, 2000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if (persons.some(person => person.name === newName)) {\n      const confirmation = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one? `)\n      if (confirmation) {\n        const personObject = createPersonObject()\n        const personForReplace = persons.find(p => p.name === newName)\n\n        personService.replacePerson(personObject, personForReplace.id)\n          .then(returnedPerson => {\n            const changedPerson = { ...personForReplace, number: newNumber }\n            setPersons(persons.map(person => person.id !== personForReplace.id ? person : changedPerson))\n            addedMessage(newName)\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n\n    } else if (persons.some(person => person.name !== newName)) {\n      const personObject = createPersonObject()\n\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          addedMessage(newName)\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setMessage(JSON.stringify(error.response.data))\n          setTimeout(() => {\n            setMessage(null)\n          }, 2000)\n        })\n    }\n  }\n\n  const deletePersonFromList = (person) => {\n    let confirmation = window.confirm(`Delete ${person.name} ?`)\n    if (confirmation) {\n      personService.deletePerson(person.id).then(\n        setPersons(persons.filter(p => p.id !== person.id))\n      )\n        .catch(error => {\n          setMessage(`Information of ${person.name} has already been removed from server`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 2000)\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n\n    }\n  }\n\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n\n\n      <Filter persons={newFilter} handleFilterChange={handleFilterChange} />\n\n      <h2>Add a new</h2>\n      <PersonForm persons={persons} setPersons={setPersons} setNewName={setNewName} setNewNumber={setNewNumber}\n        handlePersonChange={handlePersonChange} newNumber={newNumber} handleNumberChange={handleNumberChange} newName={newName} addPerson={addPerson} />\n\n      <h2>Numbers</h2>\n      <Persons persons={persons} newFilter={newFilter} deletePersonFromList={deletePersonFromList} />\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}